<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.wolfcode.edu.mapper.ReceiptBillMapper" >
  <resultMap id="BaseResultMap" type="cn.wolfcode.edu.domain.ReceiptBill" >
    <id column="id" property="id" />
    <result column="receiptTime" property="receipttime" />
    <result column="receiptMoney" property="receiptmoney" />
    <result column="billNum" property="billnum" />
    <result column="remark" property="remark" />
    <result column="totalMoney" property="totalmoney" />
    <result column="state" property="state" />
    <result column="unpaidmoney" property="unpaidmoney"/>
    <!--学员-->
    <association property="client" javaType="cn.wolfcode.edu.domain.Client">
      <id column="c_id" property="id"></id>
      <result column="c_name" property="name"></result>
      <result column="c_tel" property="tel"></result>
      <result column="c_qq" property="qq"></result>
    </association>
    <!--课程-->
    <association property="courseName" javaType="cn.wolfcode.edu.domain.CourseName">
      <id column="cou_id" property="id"></id>
      <result column="cou_name" property="name"></result>
    </association>

    <!--支付方式-->
    <association property="payment" javaType="cn.wolfcode.edu.domain.PayMent">
      <id column="pay_id" property="id"></id>
      <result column="pay_payname" property="payname"></result>
    </association>
    <!--班级-->
    <association property="grade" javaType="cn.wolfcode.edu.domain.Grade">
      <id column="g_id" property="id"></id>
      <result column="g_name" property="name"></result>
    </association>
    <!--收款人-->
    <association property="receipter" javaType="cn.wolfcode.edu.domain.Employee">
      <id column="receipter_id" property="id"></id>
      <result column="receipter_realname" property="realname"></result>
    </association>
    <!--营销人员-->
    <association property="marketer" javaType="cn.wolfcode.edu.domain.Employee">
      <id column="marketer_id" property="id"></id>
      <result column="marketer_realname" property="realname"></result>
    </association>
    <!--审核人-->
    <association property="auditor" javaType="cn.wolfcode.edu.domain.Employee">
      <id column="auditor_id" property="id"></id>
      <result column="auditor_realname" property="realname"></result>
    </association>
    <!--校区-->
    <association property="campus" javaType="cn.wolfcode.edu.domain.Campus">
      <id column="cam_id" property="id" />
      <result column="cam_name" property="name"/>
    </association>
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from `receiptbill`
    where id = #{id}
  </delete>
  <insert id="insert" parameterType="cn.wolfcode.edu.domain.ReceiptBill" useGeneratedKeys="true" keyProperty="id" >
    insert into `receiptbill` (client_id, receiptTime, receiptMoney, coursename_id, payment_id,campus_id,auditor_id,
      billNum, grade_id, remark, receipter_id, marketer_id,
      totalMoney,state,unpaidmoney)
    values (#{client.id}, #{receipttime}, #{receiptmoney}, #{courseName.id}, #{payment.id},#{campus.id}, #{auditor.id},
      #{billnum}, #{grade.id}, #{remark}, #{receipter.id}, #{marketer.id},
      #{totalmoney},#{state},#{unpaidmoney})
  </insert>
  <update id="updateByPrimaryKey" parameterType="cn.wolfcode.edu.domain.ReceiptBill" >
    update `receiptbill`
    set client_id = #{client.id},
      receiptTime = #{receipttime},
      receiptMoney = #{receiptmoney},
      coursename_id = #{courseName.id},
      auditor_id = #{auditor.id},
      payment_id = #{payment.id},
      billNum = #{billnum},
      grade_id = #{grade.id},
      remark = #{remark},
      receipter_id = #{receipter.id},
      marketer_id = #{marketer.id},
      totalMoney = #{totalmoney},
      state = #{state},
      unpaidmoney = #{unpaidmoney},
      campus_id = #{campus.id}
    where id = #{id}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select re.id,  re.receiptTime, re.receiptMoney, re.billNum,re.unpaidmoney, re.remark,
    re.totalMoney,re.state,
    pay.id pay_id, pay.payname pay_payname,
    receipter.id receipter_id, receipter.realname receipter_realname,
    marketer.id marketer_id, marketer.realname marketer_realname,
    auditor.id auditor_id, auditor.realname auditor_realname,
    cam.id cam_id, cam.name cam_name,
    cou.id cou_id, cou.name cou_name,
    g.id g_id, g.name g_name,
    c.id c_id, c.name c_name
    from `receiptbill` re
    left join client c on re.client_id = c.id
    left join payment pay on re.payment_id = pay.id
    left join employee receipter on re.receipter_id = receipter.id
    left join employee marketer on re.marketer_id = marketer.id
    left JOIN campus cam on re.campus_id = cam.id
    left JOIN coursename cou on re.coursename_id = cou.id
    left JOIN grade g on re.grade_id = g.id
    left join employee auditor on re.auditor_id = auditor.id
    where re.id = #{id}
  </select>

  <select id="selectBillsByClientId" resultMap="BaseResultMap" >
    select re.id,  re.receiptTime, re.receiptMoney, re.billNum,re.unpaidmoney, re.remark,
    re.totalMoney,re.state,
    pay.id pay_id, pay.payname pay_payname,
    receipter.id receipter_id, receipter.realname receipter_realname,
    marketer.id marketer_id, marketer.realname marketer_realname,
    auditor.id auditor_id, auditor.realname auditor_realname,
    cam.id cam_id, cam.name cam_name,
    cou.id cou_id, cou.name cou_name,
    g.id g_id, g.name g_name,
    c.id c_id, c.name c_name
    from `receiptbill` re
    left join client c on re.client_id = c.id
    left join payment pay on re.payment_id = pay.id
    left join employee receipter on re.receipter_id = receipter.id
    left join employee marketer on re.marketer_id = marketer.id
    left JOIN campus cam on re.campus_id = cam.id
    left JOIN coursename cou on re.coursename_id = cou.id
    left JOIN grade g on re.grade_id = g.id
    left join employee auditor on re.auditor_id = auditor.id
    where c.id = #{id}
  </select>

  <select id="selectAll" resultMap="BaseResultMap" >
    select re.id,  re.receiptTime, re.receiptMoney, re.billNum,re.unpaidmoney, re.remark,
    re.totalMoney,re.state,
    pay.id pay_id, pay.payname pay_payname,
    receipter.id receipter_id, receipter.realname receipter_realname,
    marketer.id marketer_id, marketer.realname marketer_realname,
    auditor.id auditor_id, auditor.realname auditor_realname,
    cam.id cam_id, cam.name cam_name,
    cou.id cou_id, cou.name cou_name,
    g.id g_id, g.name g_name,
    c.id c_id, c.name c_name
    from `receiptbill` re
    left join client c on re.client_id = c.id
    left join payment pay on re.payment_id = pay.id
    left join employee receipter on re.receipter_id = receipter.id
    left join employee marketer on re.marketer_id = marketer.id
    left JOIN campus cam on re.campus_id = cam.id
    left JOIN coursename cou on re.coursename_id = cou.id
    left JOIN grade g on re.grade_id = g.id
    left join employee auditor on re.auditor_id = auditor.id
  </select>

  <select id="queryForCount" resultType="int">
    select count(re.id)
    from `receiptbill` re
    left join client c on re.client_id = c.id
    left join payment pay on re.payment_id = pay.id
    left join employee receipter on re.receipter_id = receipter.id
    left join employee marketer on re.marketer_id = marketer.id
    left JOIN campus cam on re.campus_id = cam.id
    left JOIN coursename cou on re.coursename_id = cou.id
    left JOIN grade g on re.grade_id = g.id
    left join employee auditor on re.auditor_id = auditor.id
    <include refid="BASE_WHERE"/>
  </select>

  <select id="queryForList" resultMap="BaseResultMap">
    select re.id,  re.receiptTime, re.receiptMoney, re.billNum,re.unpaidmoney, re.remark,
    re.totalMoney,re.state,
    pay.id pay_id, pay.payname pay_payname,
    receipter.id receipter_id, receipter.realname receipter_realname,
    marketer.id marketer_id, marketer.realname marketer_realname,
    auditor.id auditor_id, auditor.realname auditor_realname,
    cam.id cam_id, cam.name cam_name,
    cou.id cou_id, cou.name cou_name,
    g.id g_id, g.name g_name,
    c.id c_id, c.name c_name
    from `receiptbill` re
    left join client c on re.client_id = c.id
    left join payment pay on re.payment_id = pay.id
    left join employee receipter on re.receipter_id = receipter.id
    left join employee marketer on re.marketer_id = marketer.id
    left JOIN campus cam on re.campus_id = cam.id
    left JOIN coursename cou on re.coursename_id = cou.id
    left JOIN grade g on re.grade_id = g.id
    left join employee auditor on re.auditor_id = auditor.id
    <include refid="BASE_WHERE"/>
    limit #{startIndex},#{rows}
  </select>

  <sql id="BASE_WHERE">
    <where>
      <if test="keyword != null">
        and (c.name LIKE concat("%",#{keyword},"%") or receipter.realname LIKE concat("%",#{keyword},"%"))
      </if>
      <if test="begindate != null">
        and re.lastreceiptTime >= #{begindate}
      </if>
      <if test="enddate != null">
        and re.lastreceiptTime &lt;= #{enddate}
      </if>
      <if test="paymentId != null">
        and pay.id = #{paymentId}
      </if>
      <if test="gradeId != null">
        and g.id = #{gradeId}
      </if>
    </where>
  </sql>

  <select id="selectByClientId" resultMap="BaseResultMap">
    select re.id,  re.receiptTime, re.receiptMoney, re.billNum,re.unpaidmoney, re.remark,
    re.totalMoney,re.state,
    pay.id pay_id, pay.payname pay_payname,
    receipter.id receipter_id, receipter.realname receipter_realname,
    marketer.id marketer_id, marketer.realname marketer_realname,
    auditor.id auditor_id, auditor.realname auditor_realname,
    cam.id cam_id, cam.name cam_name,
    cou.id cou_id, cou.name cou_name,
    g.id g_id, g.name g_name,
    c.id c_id, c.name c_name
    from `receiptbill` re
    left join client c on re.client_id = c.id
    left join payment pay on re.payment_id = pay.id
    left join employee receipter on re.receipter_id = receipter.id
    left join employee marketer on re.marketer_id = marketer.id
    left JOIN campus cam on re.campus_id = cam.id
    left JOIN coursename cou on re.coursename_id = cou.id
    left JOIN grade g on re.grade_id = g.id
    left join employee auditor on re.auditor_id = auditor.id
    where re.client_id = #{id}
  </select>
</mapper>