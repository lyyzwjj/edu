<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.wolfcode.edu.mapper.EmployeeMapper" >

  <resultMap id="BaseResultMap" type="cn.wolfcode.edu.domain.Employee" >
    <id column="id" property="id" />
    <result column="username" property="username" />
    <result column="password" property="password" />
    <result column="realname" property="realname" />
    <result column="age" property="age" />
    <result column="gender" property="gender" />
    <result column="bornDate" property="bornDate" />
    <result column="cardId" property="cardId" />
    <result column="tel" property="tel" />
    <result column="eamil" property="eamil" />
    <result column="qq" property="qq" />
    <result column="address" property="address" />
    <result column="employeeId" property="employeeId" />
    <result column="attendanceId" property="attendanceId" />
    <result column="hireDate" property="hireDate" />
    <result column="seniority" property="seniority" />
    <result column="state" property="state" />
    <result column="portrait" property="portrait" />
    <result column="admin" property="admin" />
    <result column="sourceOfClient_id" property="sourceOfClientId"/>
    <association property="dept" javaType="cn.wolfcode.edu.domain.Department" columnPrefix="d_">
        <id property="id" column="id"></id>
        <result property="name" column="name"></result>
        <result property="sn" column="sn"></result>
    </association>
  </resultMap>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from `employee` where id = #{id}
  </delete>

  <insert id="insert" parameterType="cn.wolfcode.edu.domain.Employee" useGeneratedKeys="true" keyProperty="id" >
    insert into `employee` (username, password, realname, age, gender, bornDate, cardId,
      tel, eamil, qq, address, employeeId, attendanceId, hireDate, 
      seniority, state, portrait, admin,dept_id,sourceOfClient_id)
    values (#{username}, #{password}, #{realname}, #{age}, #{gender}, #{bornDate}, #{cardId},
      #{tel}, #{eamil}, #{qq}, #{address}, #{employeeId}, #{attendanceId}, #{hireDate},
      #{seniority}, #{state}, #{portrait}, #{admin},#{dept.id},#{sourceOfClientId})
  </insert>

  <update id="updateByPrimaryKey" parameterType="cn.wolfcode.edu.domain.Employee" >
    update `employee`
    set username = #{username},
      password = #{password},
      realname = #{realname},
      age = #{age},
      gender = #{gender},
      bornDate = #{bornDate},
      cardId = #{cardId},
      tel = #{tel},
      eamil = #{eamil},
      qq = #{qq},
      address = #{address},
      employeeId = #{employeeId},
      attendanceId = #{attendanceId},
      hireDate = #{hireDate},
      seniority = #{seniority},
      state = #{state},
      portrait = #{portrait},
      admin = #{admin},
      dept_id=#{dept.id},
      sourceOfClient_id=#{sourceOfClientId}
    where id = #{id}
  </update>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select e.id, e.username, e.password, e.realname, e.age, e.gender, e.bornDate, e.cardId, e.tel, e.eamil,
    e.qq, e.address, e.employeeId, e.attendanceId, e.hireDate, e.seniority, e.state, e.portrait, e.admin,
    e.dept_id,e.sourceOfClient_id,
    d.id d_id,d.name d_name , d.sn d_sn
    from `employee` e
    LEFT JOIN department d
    on e.dept_id =d.id
    where id = #{id}
  </select>

  <select id="selectAll" resultMap="BaseResultMap" >
    select e.id, e.username, e.password, e.realname, e.age, e.gender, e.bornDate, e.cardId, e.tel, e.eamil,
    e.qq, e.address, e.employeeId, e.attendanceId, e.hireDate, e.seniority, e.state, e.portrait, e.admin,
    e.dept_id,e.sourceOfClient_id,
    d.id d_id,d.name d_name , d.sn d_sn
    from `employee` e
    LEFT JOIN department d
    on e.dept_id =d.id
  </select>

  <select id="queryForCount" resultType="int">
    select count(e.id)
    from `employee` e
    LEFT JOIN department d
    on e.dept_id =d.id
    <include refid="query_sql"/>
  </select>

  <select id="queryForList" resultMap="BaseResultMap">
    select e.id, e.username, e.password, e.realname, e.age, e.gender, e.bornDate, e.cardId, e.tel, e.eamil,
    e.qq, e.address, e.employeeId, e.attendanceId, e.hireDate, e.seniority, e.state, e.portrait, e.admin,
    e.dept_id,e.sourceOfClient_id,
    d.id d_id,d.name d_name , d.sn d_sn
    from `employee` e
    LEFT JOIN department d
    on e.dept_id =d.id
    <include refid="query_sql"/>
      <if test="sort!=null">
        order by ${sort} ${order}
      </if>
    limit #{startIndex},#{rows}
  </select>

  <update id="changeState">
    update employee set state =state^1 where id = #{id}
  </update>

  <sql id="query_sql">
    <where>
      <if test="keyword != null">
        and ( e.username like concat("%",#{keyword} ,"%") or
        realname like concat("%",#{keyword} ,"%"))
      </if>
      <if test="beginDate!=null">
        and e.hireDate >= #{beginDate}
      </if>
      <if test="endDate!=null">
        and e.hireDate &lt;= #{endDate}
      </if>
      <if test="deptId > 0 ">
        and e.dept_id = #{deptId}
      </if>
    </where>
  </sql>

  <!--删除员工与角色的关系-->
  <delete id="deleteRelation">
    delete from role_employee where employee_id = #{id}
  </delete>

  <!--保存员工和角色的关系 -->
  <insert id="insertRelation">
    insert into role_employee (employee_id,role_id) values (#{empId},#{roleId})
  </insert>

  <update id="uploadPortrait">
     update `employee`
    set portrait = #{imgPath}
    where id=#{empId}
  </update>
  <select id="checkName" resultType="Employee">
    SELECT id,username,password,state from employee WHERE  username = #{username}
  </select>
</mapper>